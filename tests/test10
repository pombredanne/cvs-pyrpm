#!/bin/sh

# best run from pyrpm/scripts with "../test/test10"
test -x ./pyrpmyum || exit 1

umask 022

dokill() {
    killall cups-config-daemon 2> /dev/null
    killall minilogd 2> /dev/null
}

preparechroot() {
    nodev=
    if test x$1 = x--nodev ; then
        nodev=--nodev
        shift
    fi
    fuser -k $1/ 2> /dev/null
    dokill
    umount $1/dev 2> /dev/null
    umount $1/proc 2> /dev/null
    mkdir -p $1/{dev,etc/sysconfig,tmp,proc,var/tmp,var/run}
    chmod 1777 $1/tmp
    touch $1/etc/fstab
    echo "NETWORKING=yes" > $1/etc/sysconfig/network
    if test x$nodev = x ; then
        mount --bind /dev $1/dev
    else
        mknod -m 0666 $1/dev/null c 1 3
        mknod -m 0666 $1/dev/zero c 1 5
        mknod -m 0644 $1/dev/random c 1 8
        mknod -m 0644 $1/dev/urandom c 1 9
        mknod -m 0660 $1/dev/ttyS0 c 4 64
        mknod -m 0660 $1/dev/ttyS1 c 4 65
        mknod -m 0666 $1/dev/ptmx c 5 2
        mknod -m 0660 $1/dev/md0 b 9 0
        mknod -m 0660 $1/dev/loop0 b 7 1
    fi
    mount -t proc proc $1/proc
}

cleanchroot() {
    test -d $1/dev  || return
    test -d $1/proc || return
    dokill
    umount $1/dev  2> /dev/null
    umount $1/proc 2> /dev/null
    umount $1/mnt/raid 2> /dev/null
    test -d $1/proc/1 -o -e $1/dev/pts/1 \
        && { echo "umount did not work for $1"; exit 1; }
    if mount | gawk '{print $3}' | grep -q "^$1$" ; then
        echo "umount did not work for $1"; exit 1;
    fi
    rm -fr $1
}

doinstall() {
    nodev=
    if test x$1 = x--nodev ; then
        nodev=--nodev
        shift
    fi
    test -d "$1" || { echo "No dir $1 exists."; return; }
    cleanchroot $2
    preparechroot $nodev $2
    sync
    if test x$3 = xrpm ; then
        { time rpm -U --nodigest --nosignature --root=$2 $1/*.rpm; } 2>&1 \
            | tee $2.LOG
    else
        { time $PYRPMYUM -r $2 -c $2/etc/nosuchfile.conf install $1; } 2>&1 \
            | tee $2.LOG
    fi
    sync
    dokill
}

genyumconf() {
test -n "$3" && {
    mkdir -p $2/mnt/raid
    mount porky.stuttgart.redhat.com:/mnt/raid $2/mnt/raid
    cp /etc/resolv.conf $2/etc/
}
rm -f $2/etc/yum.repos.d/*
rm -f $2/var/lib/rpm/__*
cat > $2/etc/yum.conf <<EOF
[main]
cachedir=/var/cache/yum
debuglevel=0
errorlevel=0
logfile=/var/log/yum.log
gpgcheck=0
assumeyes=1
tolerant=1
exactarch=0
obsoletes=1
distroverpkg=fedora-release
retries=10
pkgpolicy=newest
#reposdir=/etc/does-not-exist

EOF
test -n "$3" && cat >> $2/etc/yum.conf <<EOF
[base]
name=Fedora Linux Core $1 - $ARCH
baseurl=file://$FEDORA/$1/$ARCH/os/

EOF
cat >> $2/etc/yum.conf <<EOF
[updates]
name=Fedora Linux Core $1 - $ARCH - Updates
baseurl=file://$FEDORA/updates/$1/$ARCH/
EOF
}

DATA=/mnt/data/karsten
#DATA=/mnt/data/laroche


RELEASED=/mnt/raid/redhat/released
FEDORA=/mnt/raid/fedora
EXTRAS=/mnt/raid/fedora-extras
ARCHS="i386 x86_64"
DIR="$FEDORA"
#FEDORA=/mnt/data/laroche/fedora
RPMS=RedHat/RPMS
PYRPMYUM="./pyrpmyum -y --autoerase --servicehack --quiet"
CHECKRPM="./pyrpmcheck"
CHECKUPDATE="./pyrpmcheckrepo --quiet"
# Specify if updates to newer releases should be done.
RELEASEUPDATE=1

# Currently non-working:
#doinstall --nodev $RELEASED/RHL-5.2/GOLD/i386/$RPMS $DATA/5.2
#doinstall --nodev $RELEASED/RHL-6.2/GOLD/i386/$RPMS $DATA/6.2
#doinstall --nodev $RELEASED/RHEL-2.1/U6/AS/i386/tree/$RPMS $DATA/2.1-U6-i386

function rhel34installtests() {
    echo "Running $FUNCNAME check on $ARCH"
    doinstall --nodev $RELEASED/RHEL-3/U3/AS/$ARCH/tree/$RPMS $DATA/3-U3-$ARCH
    doinstall --nodev $RELEASED/RHEL-3/U4/AS/$ARCH/tree/$RPMS $DATA/3-U4-$ARCH
    doinstall --nodev /mnt/raid/trees/RHEL3U5/$ARCH/$RPMS $DATA/3-U5-$ARCH
    doinstall $RELEASED/RHEL-4/GOLD/AS/$ARCH/tree/$RPMS $DATA/4-GOLD-$ARCH
    doinstall /mnt/raid/trees/RHEL4/$ARCH/$RPMS $DATA/4-trees-$ARCH
    doinstall /mnt/redhat/rel-eng/RHEL4-re1129.0/$ARCH/$ARCH-AS/$RPMS $DATA/4-$ARCH
}

function fc1updatespyrpm() {
    # FC1/updates/testing to FC3/devel updates with pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/FC1-$ARCH
    # Raw FC1 install
    doinstall --nodev $FEDORA/1/$ARCH/os/Fedora/RPMS $IN
    # Update FC1 to updates
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/updates/1/$ARCH ; } 2>&1 | tee $IN.LOG.1
    # Update FC1 to testing
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/updates/testing/1/$ARCH ; } 2>&1 | tee $IN.LOG.2
    if test $RELEASEUPDATE = 1 ; then
        # Update FC1 to FC2+updates
        { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf upgrade $FEDORA/2/$ARCH/os/Fedora/RPMS $FEDORA/updates/2/$ARCH ; } 2>&1 | tee $IN.LOG.3
        # Update to FC3+updates
        { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf upgrade $FEDORA/3/$ARCH/os/Fedora/RPMS $FEDORA/updates/3/$ARCH ; } 2>&1 | tee $IN.LOG.4
        # Update to FC-development
        { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf upgrade $FEDORA/development/$ARCH/Fedora/RPMS ; } 2>&1 | tee $IN.LOG.5
    fi
    cleanchroot $IN
}

function fc2updatespyrpm() {
    # FC2/updates/testing to FC3/devel updates with pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/FC2-$ARCH
    # Raw FC2 install
    doinstall --nodev $FEDORA/2/$ARCH/os/Fedora/RPMS $IN
    # Update FC2 to updates
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/updates/2/$ARCH ; } 2>&1 | tee $IN.LOG.1
    # Update FC2 to testing
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/updates/testing/2/$ARCH ; } 2>&1 | tee $IN.LOG.2
    if test $RELEASEUPDATE = 1 ; then
        # Update FC2 to FC3+updates
        { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf upgrade $FEDORA/3/$ARCH/os/Fedora/RPMS $FEDORA/updates/3/$ARCH ; } 2>&1 | tee $IN.LOG.3
        # Update to FC-development
        { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf upgrade $FEDORA/development/$ARCH/Fedora/RPMS ; } 2>&1 | tee $IN.LOG.4
    fi
    cleanchroot $IN
}

function fc3updatespyrpm() {
    # FC3/updates/testing to devel updates with pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/FC3-$ARCH
    # Raw FC3 install
    doinstall         $FEDORA/3/$ARCH/os/Fedora/RPMS $IN
    # Update FC3 to updates
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/updates/3/$ARCH ; } 2>&1 | tee $IN.LOG.1
    # Update FC3 to testing
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/updates/testing/3/$ARCH ; } 2>&1 | tee $IN.LOG.2
    if test $RELEASEUPDATE = 1 ; then
        # Update to FC-development
        { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf upgrade $FEDORA/development/$ARCH/Fedora/RPMS ; } 2>&1 | tee $IN.LOG.3
    fi
    cleanchroot $IN
}

function fcdevelreinstallrpm() {
    # FC-devel install with pyrpm, reinstall with rpm
    echo "Running $FUNCNAME check on $ARCH"
    doinstall $FEDORA/development/$ARCH/Fedora/RPMS $DATA/FC4-$ARCH
    ln -sf $FEDORA/development/$ARCH/Fedora/RPMS /tmp/n
    doinstall /tmp/n $DATA/FC4-$ARCH-rpm rpm
    cleanchroot $IN
}

function fc123rpminstallyumupdate() {
    # Fedora Core 1/2/3 with /bin/rpm and updates with yum
    echo "Running $FUNCNAME check on $ARCH"
    NODEV="--nodev"
    for i in 1 2 3 ; do
        test $i = 3 && NODEV=
        IN=$DATA/FC$i-$ARCH-rpm
        doinstall $NODEV $FEDORA/$i/$ARCH/os/Fedora/RPMS $IN rpm
        genyumconf $i $IN
        { time chroot $IN yum update; } 2>&1 | tee $IN.LOG.1
    done
    cleanchroot $IN
}

function fc123yumupdate() {
    # Fedora Core 1/2/3 updates with pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/FC1-2-3-$ARCH
    # Install FC1
    doinstall --nodev $FEDORA/1/$ARCH/os/Fedora/RPMS $IN
    # Update FC1 to updates
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/updates/1/$ARCH ; } 2>&1 | tee $IN.LOG.1
    # Update to FC2 with all updates
    genyumconf 2 $IN withbase
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf update; } 2>&1 | tee $IN.LOG.2
    # Update to FC3 with all updates
    genyumconf 3 $IN withbase
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf update; } 2>&1 | tee $IN.LOG.3
    cleanchroot $IN
}

function fc3funkyupdates() {
    # Install FC3 with all updates, funky remove and updates with pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/FC3-removaltests-$ARCH
    cleanchroot $IN
    preparechroot $IN
    genyumconf 3 $IN withbase
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf install "*"; } 2>&1 | tee $IN.LOG
    # Do some funky remove and updates to see if removals and updates work
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf groupremove base-x; } 2>&1 | tee $IN.LOG.1
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf groupupdate kde-desktop; } 2>&1 | tee $IN.LOG.2
    { time $PYRPMYUM -r $IN remove db4; } 2>&1 | tee $IN.LOG.3
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf update mozilla evolution openoffice.org-writer; } 2>&1 | tee $IN.LOG.4
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf groupremove base; } 2>&1 | tee $IN.LOG.5
    { time $PYRPMYUM -r $IN -c $IN/etc/yum.conf groupinstall development-tools; } 2>&1 | tee $IN.LOG.6
    cleanchroot $IN
}

function rhel3u2tou5pyrpmyum() {
    # RHEL-3 U2 update to U5 with pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/RHEL3-U2-updatetests-$ARCH
    # Install RHEL3-U2
    echo "$PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf install $RELEASED/RHEL-3/U2/AS/$ARCH/tree/RedHat/RPMS" 2>&1 | tee $IN.LOG.1
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf install $RELEASED/RHEL-3/U2/AS/$ARCH/tree/RedHat/RPMS ; } 2>&1 | tee -a $IN.LOG.1
    # Update to U5
    echo "$PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $RELEASED/RHEL-3/U5/AS/$ARCH/tree/RedHat/RPMS" 2>&1 | tee -a $IN.LOG.1
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $RELEASED/RHEL-3/U5/AS/$ARCH/tree/RedHat/RPMS ; } 2>&1 | tee -a $IN.LOG.1
    cleanchroot $IN
}

function rhel4tou1pyrpmyum() {
    # RHEL-4 update to U1 with pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/RHEL4-updatetests-$ARCH
    # Install RHEL4-GOLD
    echo "$PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf install $RELEASED/RHEL-4/GOLD/AS/$ARCH/tree/RedHat/RPMS" | 2>&1 | tee $IN.LOG.1
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf install $RELEASED/RHEL-4/GOLD/AS/$ARCH/tree/RedHat/RPMS ; } 2>&1 | tee -a $IN.LOG.1
    # Update to U1
    echo "$PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $RELEASED/RHEL-4/U1/AS/$ARCH/tree/RedHat/RPMS" 2>&1 | tee -a $IN.LOG.1
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $RELEASED/RHEL-4/U1/AS/$ARCH/tree/RedHat/RPMS ; } 2>&1 | tee -a $IN.LOG.1
    cleanchroot $IN
}
 
function fc3extraspyrpmyum() {
    # Fedora Core 3 with extras
    PYRPMYUM="./pyrpmyum -y --servicehack --quiet"
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/FC3-with-extras-$ARCH
    # --test FC3 install with updates and Extras
    echo "$PYRPMYUM --test --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/3/$ARCH/os/Fedora/RPMS $FEDORA/updates/3/$ARCH $EXTRAS/3/$ARCH" | tee $IN.LOG
    { time $PYRPMYUM --test --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/3/$ARCH/os/Fedora/RPMS $FEDORA/updates/3/$ARCH $EXTRAS/3/$ARCH; } 2>&1 | tee -a $IN.LOG
    # --test FC3 install with updates, testing and Extras
    echo "$PYRPMYUM --test --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/3/$ARCH/os/Fedora/RPMS $FEDORA/updates/3/$ARCH $FEDORA/testing/3/$ARCH $EXTRAS/3/$ARCH" | tee $IN-testing.LOG
    { time $PYRPMYUM --test --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/3/$ARCH/os/Fedora/RPMS $FEDORA/updates/3/$ARCH $FEDORA/testing/3/$ARCH $EXTRAS/3/$ARCH; } 2>&1 | tee -a $IN-testing.LOG
}

function fileconflicts() {
    echo "Running $FUNCNAME check on $ARCH"
    PYRPMYUM="./pyrpmyum -y --quiet"
    # Fileconflict tests
#        genyumconf 3 $IN withbase
    for i in 1 2 3 4 5 development; do
        if [ -d $DIR/$i/$ARCH/os/Fedora/RPMS ]; then
            RPMDIR="$DIR/$i/$ARCH/os/Fedora/RPMS"
        elif [ -d $DIR/$i/$ARCH/Fedora/RPMS ]; then
            RPMDIR="$DIR/$i/$ARCH/Fedora/RPMS"
        else
            echo "No $DIR/$i/$ARCH/os/Fedora/RPMS or $DIR/$i/$ARCH/Fedora/RPMS directories found"
            continue 
        fi
        IN=$DATA/FC${i}-fileconflicts-$ARCH
        echo "$PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf install $RPMDIR" | tee $IN.LOG
        { time $PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf install $RPMDIR; } 2>&1 | tee -a $IN.LOG
        if [ -d $DIR/updates/$i/$ARCH ]; then
            echo "$PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update  $RPMDIR $DIR/updates/$i/$ARCH" | tee -a $IN.LOG
            { time $PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update  $RPMDIR $DIR/updates/$i/$ARCH; } 2>&1 | tee -a $IN.LOG
        fi
        if [ -d $DIR/updates/testing/$i/$ARCH ]; then
            echo "$PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update  $RPMDIR $DIR/updates/$i/$ARCH $DIR/updates/testing/$i/$ARCH" | tee -a $IN.LOG
            { time $PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update  $RPMDIR $DIR/updates/$i/$ARCH $DIR/updates/testing/$i/$ARCH; } 2>&1 | tee -a $IN.LOG
        fi
        if [ -d $DIR/../fedora-extras/$i/$ARCH ]; then
            echo "$PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update  $RPMDIR $DIR/updates/$i/$ARCH $DIR/../fedora-extras/$i/$ARCH" | tee -a $IN.LOG
            { time $PYRPMYUM --test --arch $ARCH --fileconflicts --ignoresize -r $IN -c $IN/etc/nosuchfile.conf update  $RPMDIR $DIR/updates/$i/$ARCH $DIR/../fedora-extras/$i/$ARCH; } 2>&1 | tee -a $IN.LOG
        fi
    done
}

function sanitychecks() {
    # Sanity checks, each directory (FC/updates/Extras) on its own
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/
    for i in 1 2 3 4 5 development; do
        for dist in "RHEL" "FC"; do 
            for dir in \
                "$dist-$i/$ARCH/RedHat/RPMS" \
                "$dist-$i/$ARCH/Fedora/RPMS" \
                "$dist-$i/GOLD/AS/$ARCH/RedHat/RPMS" \
                "$dist-$i/GOLD/$ARCH/Fedora/RPMS" \
                "$dist-$i/GOLD/AS/$ARCH/tree/RedHat/RPMS" \
                "$dist-$i/GOLD/$ARCH/tree/Fedora/RPMS" \
                "GOLD/AS/$ARCH/tree/RedHat/RPMS" \
                "GOLD/$ARCH/tree/Fedora/RPMS" \
                "$ARCH/$ARCH-AS/RedHat/RPMS" \
                "$ARCH/RedHat/RPMS" \
                "$ARCH/Fedora/RPMS" \
                "$ARCH/tree/RedHat/RPMS" \
                "$ARCH/tree/Fedora/RPMS" \
                "RedHat/RPMS" \
                "Fedora/RPMS" \
                "$i/$ARCH" \
                "$i/$ARCH/os/*/RPMS" \
                "updates/$i/$ARCH" \
                "updates/testing/$i/$ARCH" \
                "testing/$i/$ARCH"; do
                if [ -d "$DIR/$dir" ]; then
                    if [ "${dir/RedHat/}" != "$dir" ] ; then
                        logfile=$IN/CHECKRPM-RHEL-${DIR//\//-}
                        logfile=$logfile-${dir//\//-}-$ARCH
                    else
                        logfile=$IN/CHECKRPM-FC-${DIR//\//-}
                        logfile=$logfile-${dir//\//-}-$ARCH
                    fi
                    if [ ! -f "$logfile" ]; then
                        touch $logfile
                        echo $logfile
                        $CHECKRPM --nosymlinks $DIR/$dir 2>&1 | tee $logfile
                    fi
                fi
            done
        done
    done
}

function fc3todevelupdatecheck() {
    # Run FC3 to devel updates on all archs
    IN=$DATA
    ARCHS=""
    for i in i386 x86_64 ia64 ppc ppc64 s390 s390x; do
        if [ -d /mnt/raid/fedora/3/$i/os/Fedora/RPMS/ -a -d /mnt/raid/fedora/development/$i ]; then
            logfile=$IN/CHECKUPDATE-FC-devel-$i
            $CHECKUPDATE -r $IN --arch $i -c $IN/etc/nosuchfile.conf install /mnt/raid/fedora/3/$i/os/Fedora/RPMS/ update /mnt/raid/fedora/development/$i | tee $logfile
            if [ -d /mnt/raid/fedora/updates/3/$i ]; then
                logfile=${logfile}-updates
                $CHECKUPDATE -r $IN --arch $i -c $IN/etc/nosuchfile.conf install /mnt/raid/fedora/3/$i/os/Fedora/RPMS/ /mnt/raid/fedora/updates/3/$i update /mnt/raid/fedora/development/$i | tee $logfile
                if [ -d /mnt/raid/fedora/updates/testing/3/$i ]; then
                    logfile=${logfile}-testing
                    $CHECKUPDATE -r $IN --arch $i -c $IN/etc/nosuchfile.conf install /mnt/raid/fedora/3/$i/os/Fedora/RPMS/ /mnt/raid/fedora/updates/3/$i /mnt/raid/fedora/updates/testing/3/$i update /mnt/raid/fedora/development/$i | tee $logfile
                fi
            fi
        fi
    done
}

function fcsanitychecks() {
    # Sanity checks, FC, FC+Updates, FC+Updates+Testing
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/
    for i in 1 2 3 4 5; do
        for dir in \
            "$dist-$i/$ARCH/Fedora/RPMS" \
            "$dist-$i/GOLD/$ARCH/Fedora/RPMS" \
            "$dist-$i/GOLD/$ARCH/tree/Fedora/RPMS" \
            "GOLD/$ARCH/tree/Fedora/RPMS" \
            "$ARCH/Fedora/RPMS" \
            "$ARCH/tree/Fedora/RPMS" \
            "$i/$ARCH/os/Fedora/RPMS" \
            "Fedora/RPMS"; do
            if [ -d "$DIR/$dir" ]; then
                logfile=$IN/CHECKRPM-FC-${DIR//\//-}
                logfile=$logfile-${dir//\//-}-$ARCH
                if [ ! -f "$logfile" ]; then
                    echo "Checking $DIR/$dir" | tee $logfile
                    $CHECKRPM --nosymlinks $DIR/$dir 2>&1 | tee -a $logfile
                    if [ -d "$DIR/updates/$i/$ARCH" ]; then
                        logfile=$IN/CHECKRPM-FC-updates-${DIR//\//-}
                        logfile=$logfile-${dir//\//-}-$ARCH
                        if [ ! -f "$logfile" ]; then
                            echo "Checking $DIR/$dir and $DIR/updates/$i/$ARCH" | tee $logfile
                            $CHECKRPM --nosymlinks $DIR/$dir $DIR/updates/$i/$ARCH 2>&1 | tee -a $logfile
                        fi
                        if [ -d "$DIR/updates/testing/$i/$ARCH" ]; then
                            logfile=$IN/CHECKRPM-FC-updates-testing-${DIR//\//-}
                            logfile=$logfile-${dir//\//-}-$ARCH
                            if [ ! -f "$logfile" ]; then
                                echo "Checking $DIR/${dir}, $DIR/updates/$i/$ARCH and $DIR/updates/testing/$i/$ARCH" | tee $logfile
                                $CHECKRPM --nosymlinks $DIR/$dir $DIR/updates/testing/$i/$ARCH 2>&1 | tee -a $logfile
                            fi
                        fi
                    fi
                fi
            fi
        done
    done
    if [ -d "$DIR/development" ]; then
        logfile=$IN/CHECKRPM-FCdevelopment-${DIR//\//-}
        logfile=$logfile-${dir//\//-}-$ARCH
        if [ ! -f "$logfile" ]; then
            echo "Checking $DIR/development" | tee $logfile
            $CHECKRPM $DIR/development 2>&1 | tee -a $logfile
        fi
    fi
}

function fc123pyrpmyumyummix() {
    # Fedora Core 1/2/3/devel with yum/pyrpmyum
    echo "Running $FUNCNAME check on $ARCH"
    IN=$DATA/FC1-2-3-devel-$ARCH
    cleanchroot $IN
    preparechroot $IN
    echo "Install FC1" | tee $IN.LOG.1
    echo "doinstall --nodev $FEDORA/1/$ARCH/os/Fedora/RPMS $IN" | tee -a $IN.LOG.1
    doinstall --nodev $FEDORA/1/$ARCH/os/Fedora/RPMS $IN | tee -a $IN.LOG.1
    genyumconf 1 $IN withbase
    echo "Update FC1 to updates" | tee -a $IN.LOG.1
    echo "chroot $IN /usr/bin/yum update" | tee -a $IN.LOG.1
    { time chroot $IN /usr/bin/yum update; } 2>&1 | tee -a $IN.LOG.1

    echo "Update to FC2 with pyrpmyum" | tee $IN.LOG.2
    echo "$PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/2/$ARCH/os/Fedora/RPMS" | tee -a $IN.LOG.2
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/2/$ARCH/os/Fedora/RPMS ; } 2>&1 | tee -a $IN.LOG.2
    echo "Update to FC2  / updates with yum" | tee $IN.LOG.2
    genyumconf 2 $IN withbase
    echo "chroot $IN /usr/bin/yum update" | tee -a $IN.LOG.2
    { time chroot $IN /usr/bin/yum update; } 2>&1 | tee -a $IN.LOG.2

    echo "Update to FC3 with pyrpmyum" | tee $IN.LOG.3
    echo "$PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/3/$ARCH/os/Fedora/RPMS" | tee -a $IN.LOG.3
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/3/$ARCH/os/Fedora/RPMS ; } 2>&1 | tee -a $IN.LOG.3
    echo "Update to FC3  / updates with yum" | tee $IN.LOG.3
    genyumconf 3 $IN withbase
    echo "chroot $IN /usr/bin/yum update" | tee -a $IN.LOG.3
    { time chroot $IN /usr/bin/yum update; } 2>&1 | tee -a $IN.LOG.3

    echo "Update to FC-devel with pyrpmyum" | tee $IN.LOG.4
    echo "$PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/development/$ARCH/Fedora/RPMS" | tee -a $IN.LOG.4
    { time $PYRPMYUM -r $IN -c $IN/etc/nosuchfile.conf update $FEDORA/development/$ARCH/Fedora/RPMS ; } 2>&1 | tee -a $IN.LOG.4
    cleanchroot $IN
}

function showfunction() {
        PS3="Select which source you'd like to see:"
        select i in "${TESTS[@]}"; do type ${TESTFUNCTIONS[$((REPLY-1))]}; break; done
        exit
}

# These two arrays need to be kept in sync:
declare -a TESTS
declare -a TESTFUNCTIONS
TESTS=( "RHEL3_U3-U5 RHEL4 installtests with pyrpmyum"
        "FC1/updates/testing to FC3/devel updates with pyrpmyum"
        "FC2/updates/testing to FC3/devel updates with pyrpmyum"
        "FC3/updates/testing to FC3/devel updates with pyrpmyum"
        "FC-devel install with pyrpm, reinstall with rpm"
        "Fedora Core 1/2/3 with /bin/rpm and updates with yum"
        "Fedora Core 1/2/3 updates with pyrpmyum"
        "FC3 with all updates, funky remove and updates with pyrpmyum"
        "RHEL-3 U2 update to U5 with pyrpmyum"
        "RHEL-4 update to U1 with pyrpmyum"
        "Fedora Core 3 with extras"
        "Fileconflict tests"
        "Sanity checks, each directory (FC/updates/Extras) on its own"
        "Sanity checks, FC, FC+Updates, FC+Updates+Testing"
        "Run FC3 to devel updates on all archs"
        "Fedora Core 1/2/3/devel with yum/pyrpmyum"
        "run all tests (USE WITH CAUTION)"          # leave those two as the last two entries
        "show sources of a test (menu)"             # leave those two as the last two entries
      )
TESTFUNCTIONS=("rhel34installtests"
               "fc1updatespyrpm"
               "fc2updatespyrpm"
               "fc3updatespyrpm"
               "fcdevelreinstallrpm"
               "fc123rpminstallyumupdate"
               "fc123yumupdate"
               "fc3funkyupdates"
               "rhel3u2tou5pyrpmyum"
               "rhel4tou1pyrpmyum"
               "fc3extraspyrpmyum"
               "fileconflicts"
               "sanitychecks"
               "fcsanitychecks"
               "fc3todevelupdatecheck"
               "fc123pyrpmyumyummix"
               "runalltests"            # leave those two as the last two entries
               "showfunction"           # leave those two as the last two entries
              )

numtests=${#TESTS[@]}
numtests=$((numtests-1))

if test x$1 = x--help ; then
    echo "[--help]                 -   this page"
    echo "[--arch \"arch1 arch2\"]   -   architectures to test,"
    echo "                                             currently only i386 and x86_64"
    echo "[--dir]                  - only valid for fileconflicts and sanitychecks,"
    echo "                           defines basedir to look for install trees"
    echo "                           p.e. /mnt/raid/fedora/"
    echo "[--checkfedora]          - runs dependency, fileconflicts, symlink and install tests"
    echo "                           on FC, FC+updates, FC+updates+testing, FC+updates+extras, FC3->devel"

    for i in `seq 0 $numtests`; do 
        echo "[--${TESTFUNCTIONS[$i]}]   (${TESTS[$i]})"
    done
    exit
fi

numtests=$((numtests-1))

teststorun=""
while [ "$#" != "0" ]; do
        if [ "$1" == "--showfunction" ]; then
            teststorun="showfunction"
            break
        elif [ "$1" == "--dir" ]; then
            DIR=$2
            shift
            shift
        elif [ "$1" == "--arch" ]; then
            ARCHS=$2
            shift
            shift
        elif [ "$1" == "--checkfedora" ]; then
            teststorun="fc3extraspyrpmyum fileconflicts fcsanitychecks fc3todevelupdatecheck"
            shift
        else
            teststorun="$teststorun ${1/--/}"
            shift
        fi
    done

if [ -z "$teststorun" ]; then
    select i in "${TESTS[@]}"; do export teststorun=${TESTFUNCTIONS[$((REPLY-1))]}; break; done
fi

for ARCH in $ARCHS; do
if [ "$teststorun" = " runalltests" ]; then
    for run in `seq 0 $numtests`; do
        "${TESTFUNCTIONS[$run]}"
    done
else
    for i in $teststorun; do 
        $i
    done
fi
done

# vim:ts=4:sw=4:showmatch:expandtab
